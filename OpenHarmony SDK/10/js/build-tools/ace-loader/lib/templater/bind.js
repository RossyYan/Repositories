const content=require("./content"),data=require("./data"),{DEVICE_LEVEL}=require("../lite/lite-enum"),card=process.env.DEVICE_LEVEL===DEVICE_LEVEL.CARD,REG_CARD_ARRAY=/(\['.+?'\])|(\[".+?"\])/g,connectContent=`+ decodeURI('${encodeURI("")}') +`;function transExp(e,n,r,t,c){let a=e.toString().trim();e=isExp(a);return a=e?parseExp(a,n,r,t,c):a}function parseExp(value,functionFlag,isValue,out,nodeLoc){const textArray=data.parseText(value),explist=[];for(let i=0;i<textArray.length;i++){const exp=textArray[i];let transValue;exp.tag?(card&&checkCard(exp.value,out,nodeLoc),transValue=card?`{{${transCardArray(exp.value)}}}`:content.parseExpression(exp.value),1===textArray.length||card||(transValue=`(${transValue})`)):transValue=card?exp.value:`decodeURI('${encodeURI(exp.value).replace(/\'/g,"%27")}')`,explist.push(transValue)}card&&checkCardVersionLimit()&&isValue&&1<explist.length&&out.log.push({line:nodeLoc.line||1,column:nodeLoc.col||1,reason:"ERROR: Variable concatenation is not supported currently."});let func=explist.join(card?"":connectContent);return!1===functionFlag||card||(func=eval("(function () {return "+func+"})")),func=card&&1<textArray.length?"$f("+func+")":func,func}function transExpForList(e){let n=e.toString().trim();e=containExp(n);return n=e?parseExpList(n):n}function parseExpList(e){const t=e.match(/{{{([\s\S]+?)}}}|{{([\s\S]+?)}}/g);e=e.replace(/{{{([\s\S]+?)}}}|{{([\s\S]+?)}}/g,"&e").split(/\s+/);let c=0;const a=[];return e.forEach(e=>{if(0<=e.indexOf("&e")){for(;0<=e.indexOf("&e");)e=e.replace("&e",t[c++]);var n=data.parseText(e);const r=[];n&&(n.forEach(function(e){e=e.tag?card?`{{${e.value}}}`:content.parseExpression(e.value):card?e.value:`'${e.value}'`;r.push(e)}),a.push(r.join("+")))}else{n=card?e:`'${e}'`;a.push(n)}}),card?a:"(function () {return ["+a.join(", ")+"]})"}function isExp(e){return/{{{([\s\S]+?)}}}|{{([\s\S]+?)}}/.test(e)}function containExp(e){return/{{{([\s\S]+?)}}}|{{([\s\S]+?)}}/g.test(e)}function removeAllExpFix(e){return containExp(e)?e.replace(/\{\{\{?|\}\}\}?/g,""):e}function transCardArray(e){return e="."===(e=e.replace(REG_CARD_ARRAY,e=>`.${e.slice(2,-2)}.`)).charAt(e.length-1)?e.slice(0,-1):e}function checkCard(e,n,r){checkApi(e)||checkIdxAndItem(e)||(checkCardVersionLimit()&&!checkVariable(e)?n.log.push({line:r.line||1,column:r.col||1,reason:`ERROR: Version 5: The expression '${e}' is not supported. Only single variables are supported.`}):checkCardVersionLimit()||checkExpression(e)||n.log.push({line:r.line||1,column:r.col||1,reason:`ERROR: Version 6 and above: The expression '${e}' is not supported. Only the binocular expression, `+"OR expression, AND expression and NOT expression are supported."}))}function checkCardVersionLimit(){return parseInt(process.env.PLATFORM_VERSION.replace("Version",""))<6}function checkApi(e){return/^\$(tc|t|r)/m.test(e)}function checkExpression(e){return checkVariable(e)||checkOR(e)||checkAND(e)||checkNOT(e)||checkBinocular(e)}function checkIdxAndItem(e){return"$idx"===e||"$item"===e}function checkVariable(e){return/^[a-zA-Z\$_][a-zA-Z\d_\.\[\]'"`\s]*$/.test(e)}function checkOR(e){return/^[a-zA-Z\$_][a-zA-Z\d_\.\[\]'"`\s]*\|\|[a-zA-Z\$_\s][a-zA-Z\d_\.\[\]'"`\s]*$/m.test(e)}function checkAND(e){return/^[a-zA-Z\$_][a-zA-Z\d_\.\[\]'"`\s]*&&[a-zA-Z\$_\s][a-zA-Z\d_\.\[\]'"`\s]*$/m.test(e)}function checkNOT(e){return/^![a-zA-Z\$_][a-zA-Z\d_\.\[\]'"`\s]*$/m.test(e)}function checkBinocular(e){return/^[a-zA-Z\$_][a-zA-Z\d_\.\[\]'"`\s]*\?[a-zA-Z\$_\s][a-zA-Z\d_\.\[\]'"`\s]*:[a-zA-Z\$_\s][a-zA-Z\d_\.\[\]'"`\s]*$/m.test(e)}transExp.checkApi=checkApi,transExp.checkExpression=checkExpression,transExp.checkIdxAndItem=checkIdxAndItem,transExp.checkVariable=checkVariable,transExp.checkAND=checkAND,transExp.checkOR=checkOR,transExp.checkNOT=checkNOT,transExp.isExp=isExp,transExp.containExp=containExp,transExp.removeAllExpFix=removeAllExpFix,transExp.transExpForList=transExpForList,transExp.transCardArray=transCardArray,module.exports=transExp;