"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof")),_classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck")),_createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass")),path=require("path"),_require=require("webpack"),Compilation=_require.Compilation,AfterEmitPlugin=function(){function e(){(0,_classCallCheck2.default)(this,e)}return(0,_createClass2.default)(e,[{key:"apply",value:function(e){e.hooks.thisCompilation.tap("card",function(a){a.hooks.processAssets.tapAsync({name:"MyPlugin",stage:Compilation.PROCESS_ASSETS_STAGE_REPOR},function(t,e){Object.keys(t).forEach(function(e){"./"+process.env.abilityType+".js"!==e&&sourceChange(e,t,a)}),e&&e()})})}}]),e}();function sourceChange(t,e,a){try{var r,n,s,o=path.extname(t);".js"===o&&(r={},(n=e[t].source()).match(/card_start((\s||\S)*)card_end/)[1].split("\n").forEach(function(e){elementChange(e,n,r)}),s={},Object.keys(r).forEach(function(e){toAddJson(s,e,JSON.parse(r[e]),a,path.join(process.env.projectPath,t))}),e[t.replace(o,"")+".json"]={source:function(){return JSON.stringify(s,null,2)},size:function(){return JSON.stringify(s,null,2).size}},delete e[t])}catch(e){a.errors.push({message:"errorStartERROR File："+t+"\n"+" ".concat(e.message)+"errorEnd"})}}function elementChange(element,source,jsonOut){var key,value,replaceSource,partStart,subSource,partEnd,out;""!==element.trim()&&"//"!==element.trim()&&(key=element.match(/var ((\s||\S)*) =/)[1],value=element.match(/"((\s||\S)*)"/)[1],replaceSource=source.replace(element,"").toString(),partStart=replaceSource.indexOf(value),subSource=replaceSource.substr(partStart),partEnd=subSource.indexOf("/***/ })"),out=subSource.substr(0,partEnd).match(/module\.exports \= ((\s||\S)*)/)[1].trim(),0===out.indexOf("JSON.parse(")&&(out=JSON.stringify(eval(out))),";"===out.substr(out.length-1,1)&&(out=out.substr(0,out.length-1)),jsonOut[key]=out)}function toAddJson(e,t,a,r,n){switch(e.template=e.template||{},e.styles=e.styles||{},e.data=e.data||{},e.actions=e.actions||{},e.apiVersion=e.apiVersion||{},t){case"card_template":e.template=a;break;case"card_style":e.styles=a;break;case"card_json":a&&(a.data&&(e.data=validateData(a.data,r,n)),a.actions&&(e.actions=processActions(a.actions,r,n)),a.apiVersion&&(e.apiVersion=validateData(a.apiVersion,r,n)),a.props)&&(e.props=replacePropsArray(a.propsValue,r,n));break;default:addElement(e,t,a,r,n)}}function addElement(e,t,a,r,n){var s=t.substr(t.lastIndexOf("_")+1,t.length-t.lastIndexOf("_")+1);switch(e[s]=e[s]||{},e[s].template=e[s].template||{},e[s].styles=e[s].styles||{},e[s].data=e[s].data||{},e[s].actions=e[s].actions||{},e[s].apiVersion=e[s].apiVersion||{},t.replace(s,"")){case"card_element_template_":e[s].template=a;break;case"card_element_style_":e[s].styles=a;break;case"card_element_json_":a&&(a.data&&(e[s].data=validateData(a.data,r,n)),a.actions&&(e[s].actions=processActions(a.actions,r,n)),a.apiVersion&&(e[s].apiVersion=validateData(a.apiVersion,r,n)),a.props)&&(e[s].props=replacePropsArray(a.propsValue,r,n))}}function replacePropsArray(t,a,r){var n;return t&&(Array.isArray(t)?(n={},t.forEach(function(e){"string"!=typeof e&&a.warnings.push({message:"warnStartWARNING File："+r+"\n"+"The props value type should be 'string', not '".concat((0,_typeof2.default)(e),"' in props array in custom elements.")+"warnEnd"}),n[e]={default:""}}),t=n):"[object Object]"===Object.prototype.toString.call(t)?Object.keys(t).forEach(function(e){"[object Object]"!==Object.prototype.toString.call(t[e])&&a.warnings.push({message:"warnStartWARNING File："+r+"\nThe props default value type can only be Object in custom elements.warnEnd"}),t[e].hasOwnProperty("default")||(t[e]={default:""})}):a.warnings.push({message:"warnStartWARNING File："+r+"\nThe props type can only be Array or Object in custom elements.warnEnd"})),t}function processActions(t,a,r){return"[object Object]"===Object.prototype.toString.call(t)?Object.keys(t).forEach(function(e){t[e].method&&("string"==typeof t[e].method?t[e].method.toLowerCase()!==t[e].method&&(a.warnings.push({message:"warnStartWARNING File："+r+"\n"+"WARNING: The key method '".concat(t[e].method,"' in the actions don't support uppercase letters.")+"warnEnd"}),t[e].method=t[e].method.toLowerCase()):a.warnings.push({message:"warnStartWARNING File："+r+"\n"+"WARNING: The key method type in the actions should be 'string', not '".concat((0,_typeof2.default)(t[e].method),"'.")+"warnEnd"}))}):t&&a.warnings.push({message:"warnStartWARNING File："+r+"\nWARNING: The actions value type can only be Object.warnEnd"}),t}function validateData(e,t,a){return e&&"[object Object]"!==Object.prototype.toString.call(e)&&t.warnings.push({message:"warnStartWARNING File："+a+"\nWARNING: The data value type can only be Object.warnEnd"}),e}module.exports={AfterEmitPlugin:AfterEmitPlugin};