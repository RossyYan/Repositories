"use strict";var childProcess=_interopRequireWildcard(require("child_process")),process=_interopRequireWildcard(require("process")),fs=_interopRequireWildcard(require("fs")),path=_interopRequireWildcard(require("path")),_cluster=_interopRequireDefault(require("cluster")),_compile_info=require("./compile_info"),_pre_define=require("./pre_define"),_utils=require("./utils");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(e){var r,i;return"function"!=typeof WeakMap?null:(r=new WeakMap,i=new WeakMap,(_getRequireWildcardCache=function(e){return e?i:r})(e))}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};r=_getRequireWildcardCache(r);if(r&&r.has(e))return r.get(e);var i,t,o={},c=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&((t=c?Object.getOwnPropertyDescriptor(e,i):null)&&(t.get||t.set)?Object.defineProperty(o,i,t):o[i]=e[i]);return o.default=e,r&&r.set(e,o),o}const red="[31m",reset="[39m";function js2abcByWorkers(e,r,i){var t=JSON.parse(e),e=path.join(process.env.cachePath,i);let o="";for(let e=0;e<t.length;++e){var c=t[e],n=c.isCommonJs?"commonjs":"esm";o+=`${c.tempFilePath};${c.recordName};${n};${(0,_utils.toUnixPath)(c.sourceFile)};`+c.packageName,e<t.length-1&&(o+="\n")}fs.writeFileSync(e,o,"utf-8");i=r+` --input-file "${e}" --output-proto --merge-abc`;_compile_info.logger.debug("gen abc cmd is: ",i);try{childProcess.execSync(i)}catch(e){_compile_info.logger.debug(red,"ArkTS:ERROR Failed to convert file to proto ",reset),process.exit(_pre_define.FAIL)}}_compile_info.logger.debug("worker data is: ",JSON.stringify(process.env)),_compile_info.logger.debug("gen_abc isWorker is: ",_cluster.default.isWorker),_cluster.default.isWorker&&void 0!==process.env.inputs&&void 0!==process.env.cmd&&void 0!==process.env.workerFileName&&void 0!==process.env.cachePath&&(_compile_info.logger.debug("==>worker #",_cluster.default.worker.id,"started!"),js2abcByWorkers(process.env.inputs,process.env.cmd,process.env.workerFileName),process.exit(_pre_define.SUCCESS));