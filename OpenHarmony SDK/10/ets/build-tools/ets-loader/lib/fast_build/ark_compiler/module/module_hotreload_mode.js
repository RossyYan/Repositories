"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ModuleHotreloadMode=void 0;var _fs=_interopRequireDefault(require("fs")),_path=_interopRequireDefault(require("path")),_module_mode=require("./module_mode"),_ark_define=require("../common/ark_define"),_utils=require("../utils"),_transform=require("../transform"),_utils2=require("../../../utils");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _newArrowCheck(e,t){if(e!==t)throw new TypeError("Cannot instantiate an arrow function")}function _defineProperty(e,t,i){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"==typeof e?e:String(e)}function _toPrimitive(e,t){if("object"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0===i)return("string"===t?String:Number)(e);i=i.call(e,t||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}let isFirstBuild=!0,hotReloadSourceMap={};class ModuleHotreloadMode extends _module_mode.ModuleMode{constructor(e){super(e),_defineProperty(this,"symbolMapFilePath",void 0),this.projectConfig.oldMapFilePath?this.symbolMapFilePath=_path.default.join(this.projectConfig.oldMapFilePath,_ark_define.SYMBOLMAP):this.throwArkTsCompilerError("ArkTS:ERROR oldMapFilePath is not specified, hotReload Fail")}generateAbc(e){isFirstBuild?(this.compileAllFiles(e),isFirstBuild=!1):this.compileChangeListFiles(e)}addHotReloadArgs(){isFirstBuild?(this.cmdArgs.push("--dump-symbol-table"),this.cmdArgs.push(`"${this.symbolMapFilePath}"`)):(this.addCacheFileArgs(),this.cmdArgs.push("--input-symbol-table"),this.cmdArgs.push(`"${this.symbolMapFilePath}"`),this.cmdArgs.push("--hot-reload"))}compileAllFiles(e){this.prepareForCompilation(e),this.buildModuleSourceMapInfo(),this.generateAbcByEs2abc()}compileChangeListFiles(e){var i=this;if(_fs.default.existsSync(this.projectConfig.changedFileList)){var r=_fs.default.readFileSync(this.projectConfig.changedFileList).toString(),r=JSON.parse(r).modifiedFiles;if(void 0===r||0===r.length)this.logger.debug(_ark_define.blue,"ArkTS: No changed files found, skip hot reload build",_ark_define.reset);else{let t=!0;var o=r.map(function(e){return _newArrowCheck(this,i),(0,_utils.isJsonSourceFile)(e)&&(this.logger.debug(_ark_define.blue,`ARKTS: json source file: ${e} changed, skip hot reload build!`,_ark_define.reset),t=!1),_path.default.join(this.projectConfig.projectPath,e)}.bind(this));t&&(this.collectModuleFileList(e,o[Symbol.iterator]()),_fs.default.existsSync(this.projectConfig.patchAbcPath)||(0,_utils2.mkdirsSync)(this.projectConfig.patchAbcPath),this.updateSourceMapFromFileList(r),e=_path.default.join(this.projectConfig.patchAbcPath,_ark_define.MODULES_ABC),(0,_utils2.validateFilePathLength)(e,this.logger),this.moduleAbcPath=e,this.generateAbcByEs2abc())}}else this.logger.debug(_ark_define.blue,`ArkTS: Cannot find file: ${this.projectConfig.changedFileList}, skip hot reload build`,_ark_define.reset)}updateSourceMapFromFileList(e){var t=this.projectConfig.projectPath.slice(this.projectConfig.projectRootPath.length+_path.default.sep.length);for(const r of e){var i=(0,_utils2.toUnixPath)(_path.default.join(t,r));(0,_utils2.validateFilePathLength)(i,this.logger),hotReloadSourceMap[i]=_transform.newSourceMaps[i]}e=_path.default.join(this.projectConfig.patchAbcPath,_ark_define.SOURCEMAPS);(0,_utils2.validateFilePathLength)(e,this.logger),_fs.default.writeFileSync(e,JSON.stringify(hotReloadSourceMap,null,2),"utf-8")}generateAbcByEs2abc(){this.generateEs2AbcCmd(),this.addHotReloadArgs(),this.generateMergedAbcOfEs2Abc()}}exports.ModuleHotreloadMode=ModuleHotreloadMode;